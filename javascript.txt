<body>

<script>
document.write()
</script>

</body>

- 바디태그 안에 스크립트 태그를 넣어준다. 
- HTML은 정적이고 JavaScript는 동적이여서 같은 것을 화면에 출력하더라도 결이 다르다.
- 웹브라우저 위에서 일어나는 일을 사건, event라고 한다.
- onclick, on keydown, onchange등이 있다.
- javascript를 브라우저 콘솔에서 이용할 수 있다.
- 변수를 쓸 때는 앞에 var를 쓰면 좋다.
- 변수를 사용 할 때 +변수+를 하면 된다.
- ===은 비교 연산자(Boolean)이다. 우항과 좌항을 비교해서 true나 false를 나타내준다.
- 
if(true or false) {
	document.write()
} else {
	document.write()
}

if절이 true면 if절에 있는 구문이 실행 되고, if절이 false면 else 절이 실행이 된다. Boolean에 따라서 실행 값이 달라진다.
- 태그 안에서 자기 자신을 가르키고 있을 때 this를 쓰면 코드가 더 간결해진다. 
- var target = 구문; 을 하면 중복된 코드들이 있을 때 더 간결한 코딩을 할 수 있다.
- 배열은 var 변수 = ["값","값2","값3"];
- 배열에 값을 추가 하고 싶다면 변수.push("값3");
- 배열에 있는 값의 수를 알고 싶다면 document.write(변수.length);
- 함수(funtion)의 또다른 말은 메소드 이다.
- <script src="파일.js"></script>를 하면 css에서 link를 한 효과를 볼 수 있다.
- 
funtion 함수이름() {

}

- return을 사용하면 다양한 맥락에서 활용 할 수 있다. 
-  함수에 있는 매게변수를 통해 들어간 값이 returnd을 통해 출력함으로서 다양한 용도로 사용할 수 있다. 
     function sum2(left, right) {
     return left + right;
      }
     document.write(sum2(2,3)+'<br>');
     document.write('<div style = "color:red">'+sum2(2,3)+'</div>');
     document.write('<div style = "font-size:3rem;">'+sum2(2,3)+'</div>');
- 객체에 속해있는 함수를 메소드라고 부른다.
- 객체는 { } 중괄호, 배열은 [ ] 대괄호
-       var people = {
        "programmer":"hajin",
        "singer":"aeong"
      }; 
	객체를 만드는 방법
-       document.write("singer :" + people.singer + "<br>");
      document.write("programmer :" + people.programmer + "<br>");
	만든 객체를 가져오는 방법
- 객체를 만들 때 띄어쓰기가 있다면 people["good pastor"] = "top"; 한것처럼 대괄호를 하고 큰따옴표를 하면 된다.
- 객체에 소속된 함수(function)를 메소드(Method)라고 하고, 객체에 소속된 변수를 프로퍼티(Property) 라고 한다.
- 객체의 프로퍼티를 구분할 때 ,를 꼭 해줘야한다.